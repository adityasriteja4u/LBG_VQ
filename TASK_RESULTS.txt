Общая структура проекта:
/matlab - директория с кодом для MATLAB
	/common - директория с общими утилитарными функциями для реализации LBG
	/model - прототипы реализации алгоритма LBG. 'main' - модель для общего случая, 'tst_main_vec2' - для двухмерного вектора, чтобы быстро и удобно рисовать результаты
	/task_data_proc - визуализация результатов работы c++-реализации. Скрипт 'norm_estims' строит графики средней и максимальной нормы отклонения результатов кодирования файла test.dat от оригинала.

/lbg_vq_cpp - директория с c++-реализацией LBG и различными сопутствующими утилитами
	/common_src - основное "ядро" для работы LBG, используется всеми утилитами
	/create_code_books - утилита для создания сохранения в файлы кодовых книг по некоторой обучающей базе. На данный момент ничего не принимает на вход, для работы с новыми базами/книгами / размерностями требуется перекомпиляция
	/encode_decode_file - утилита для кодирования/декодирования одного файла множеством заранее сформированных кодовых книг. На данный момент ничего не принимает на вход, для работы с новыми файлами / книгами / размерностями требуется перекомпиляция
	/lbg_vq_tst - утилита, запускающая набор самых простых тестов, дабы элементарно понять, что "все работает"
	/lbg_processor - утилита для кодирования / декодирования входного файла с помощью LBG. На вход принимает:
		- адрес обучающей выборки
		- адрес файла для кодирования / декодирования
		- имя выходных файлов (далее <some_out_file>)
		- размер генерируемой кодовой книги
		- параметр epsilon, отвечающий за скорость и качество "обучения" кодовой книги
		Результатом работы данной утилиты будут два файла <some_out_file>.cod и <some_out_file>.dec. В первом будет содержаться поток символов "0" и "1", представляющий итоговый битовый поток, полученный при кодировании. Во-втором будут float-числа, расположенные последовательно в памяти и представляющие из себя результат декодирования файла <some_out_file>.cod. Данные в <some_out_file>.dec помещаются аналогично с тем, как это делается для файлов обучающей выборки и входного исходного файла для кодирования.


Итого, результатом выполения задания являются:
	- утилита lbg_processor - она производит требуемое кодирование / декодирование
	- скрипты в директории /matlab/task_data_proc - они визуализирует требуемые зависимости
